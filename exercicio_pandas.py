# -*- coding: utf-8 -*-
"""exercicio pandas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10_509hNGOf_PjnZIfpgiSbH1JK-VW45P

Você foi contratado(a) para analisar os dados de vendas de uma loja que comercializa quatro categorias de produtos: Eletrônicos, Roupas, Alimentos e Móveis. A loja quer entender o desempenho das vendas durante o último trimestre (3 meses).

Os dados de vendas foram registrados semanalmente, e você precisa criar um relatório que ajude a loja a tomar decisões estratégicas.

Simule os dados de vendas:

Para cada semana, gere vendas aleatórias entre 1.000 e 10.000 unidades para cada categoria.
Crie um DataFrame com 12 semanas e 4 categorias de produtos.


Análise:

Cálculo da média semanal de vendas por categoria.
Identifique a semana com a maior receita total (soma de todas as categorias).
Encontre a categoria com a maior venda acumulada no trimestre.
Reajuste de Estratégias:

Com base nos resultados, a loja decidiu:
Aumentar as vendas de Eletrônicos e Móveis em 15%.
Reduzir as vendas de Roupas em 5%.
Manter as vendas de Alimentos inalteradas.


Atualize o DataFrame para refletir essas alterações.
"""

import pandas as pd
import numpy as np
import random
import matplotlib.pyplot as plt
import seaborn as sns




produtos = pd.Series(['Eletrônicos', 'Roupas', 'Alimentos', 'Móveis'])

ultimo_trimestre = pd.date_range(start='2024-10-01', end='2024-12-31', freq='W')

semanas = [f'Semana {i}' for i in range(1, 13)]

np.random.seed(42)

vendas = pd.DataFrame(np.random.randint(1000, 10000, size=(len(semanas), len(produtos))),
                      columns=produtos,
                      index=semanas)


vendas_media = vendas.mean()

semana_maior_receita = vendas.sum(axis=1).idxmax()

categoria_maior_venda = vendas.sum().idxmax()

vendas['Eletrônicos'] *= 1.15
vendas['Móveis'] *= 1.15
vendas['Roupas'] *= 0.95


vendas_atualizada = vendas

vendas_atualizada = pd.DataFrame(vendas_atualizada)

ultimo_trimestre = pd.date_range(start='2024-10-01', end='2024-12-31', freq='W')


figure, ax = plt.subplots(figsize=(13, 8))
vendas_atualizada = sns.lineplot(data=vendas_atualizada)
plt.show()

