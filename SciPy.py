# -*- coding: utf-8 -*-
"""Untitled29.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PUVkibKR_vLSJg4ipTCOo8CrBWDSW958
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import solve_ivp
from scipy.optimize import minimize

'''Resolver a equação diferencial com Scipy:
y'= -2 * y com y(0) = 1

#Função para representar a derivada de y em relação: a T
def dydt(t, y):
  return -2 * y

#Condição inicial
y0 = [1] #valor inicial
t_span = (0,5) #Span retorna uma tupla

#Resolver a equação diferencial
solution = solve_ivp(dydt, t_span, y0, t_eval=np.linspace(0,5,10))

plt.plot(solution.t, solution.y[0], label='y(t)')
plt.xlabel('tempo t')
plt.ylabel('y(t)')
plt.title("Solução da equação diferencial y' = -2 * y")
plt.legend()
plt.show()

#Otimizar a função

def f(x):
  return (x-3) ** 2 + 4 #(x+3 está elevado a (2+ 4))

#Ponto inicial
x0 = [0]

#Usando o método 'BFGS' para encontro do mínimo
result = minimize(f, x0, method='BFGS')

print('Valor mínimo de f(x): ', result.fun)
print('Valor de x que minimiza f(x): ', result.x)